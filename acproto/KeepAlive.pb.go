// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.16.0
// source: KeepAlive.proto

package acproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type KeepAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresenceStatus       RegisterRequest_PresenceStatus `protobuf:"varint,1,opt,name=presenceStatus,proto3,enum=AcFunDanmu.RegisterRequest_PresenceStatus" json:"presenceStatus,omitempty"`
	AppActiveStatus      RegisterRequest_ActiveStatus   `protobuf:"varint,2,opt,name=appActiveStatus,proto3,enum=AcFunDanmu.RegisterRequest_ActiveStatus" json:"appActiveStatus,omitempty"`
	PushServiceToken     *PushServiceToken              `protobuf:"bytes,3,opt,name=pushServiceToken,proto3" json:"pushServiceToken,omitempty"`
	PushServiceTokenList []*PushServiceToken            `protobuf:"bytes,4,rep,name=pushServiceTokenList,proto3" json:"pushServiceTokenList,omitempty"`
	KeepaliveIntervalSec int32                          `protobuf:"varint,5,opt,name=keepaliveIntervalSec,proto3" json:"keepaliveIntervalSec,omitempty"`
	Ipv6Available        bool                           `protobuf:"varint,6,opt,name=ipv6Available,proto3" json:"ipv6Available,omitempty"`
}

func (x *KeepAliveRequest) Reset() {
	*x = KeepAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_KeepAlive_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveRequest) ProtoMessage() {}

func (x *KeepAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_KeepAlive_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveRequest.ProtoReflect.Descriptor instead.
func (*KeepAliveRequest) Descriptor() ([]byte, []int) {
	return file_KeepAlive_proto_rawDescGZIP(), []int{0}
}

func (x *KeepAliveRequest) GetPresenceStatus() RegisterRequest_PresenceStatus {
	if x != nil {
		return x.PresenceStatus
	}
	return RegisterRequest_kPresenceOffline
}

func (x *KeepAliveRequest) GetAppActiveStatus() RegisterRequest_ActiveStatus {
	if x != nil {
		return x.AppActiveStatus
	}
	return RegisterRequest_kInvalid
}

func (x *KeepAliveRequest) GetPushServiceToken() *PushServiceToken {
	if x != nil {
		return x.PushServiceToken
	}
	return nil
}

func (x *KeepAliveRequest) GetPushServiceTokenList() []*PushServiceToken {
	if x != nil {
		return x.PushServiceTokenList
	}
	return nil
}

func (x *KeepAliveRequest) GetKeepaliveIntervalSec() int32 {
	if x != nil {
		return x.KeepaliveIntervalSec
	}
	return 0
}

func (x *KeepAliveRequest) GetIpv6Available() bool {
	if x != nil {
		return x.Ipv6Available
	}
	return false
}

type KeepAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessPointsConfig         *AccessPointsConfig `protobuf:"bytes,1,opt,name=accessPointsConfig,proto3" json:"accessPointsConfig,omitempty"`
	ServerMsec                 int64               `protobuf:"varint,2,opt,name=serverMsec,proto3" json:"serverMsec,omitempty"`
	AccessPointsConfigIpv6     *AccessPointsConfig `protobuf:"bytes,3,opt,name=accessPointsConfigIpv6,proto3" json:"accessPointsConfigIpv6,omitempty"`
	AccessPointsConfigQUic     *AccessPointsConfig `protobuf:"bytes,6,opt,name=accessPointsConfigQUic,proto3" json:"accessPointsConfigQUic,omitempty"`
	AccessPointsConfigQuicIpv6 *AccessPointsConfig `protobuf:"bytes,7,opt,name=accessPointsConfigQuicIpv6,proto3" json:"accessPointsConfigQuicIpv6,omitempty"`
	FlowCostSampleRate         float32             `protobuf:"fixed32,8,opt,name=flowCostSampleRate,proto3" json:"flowCostSampleRate,omitempty"`
	CommandSampleRate          float32             `protobuf:"fixed32,9,opt,name=commandSampleRate,proto3" json:"commandSampleRate,omitempty"`
	AccessPointsConfigWs       *AccessPointsConfig `protobuf:"bytes,10,opt,name=accessPointsConfigWs,proto3" json:"accessPointsConfigWs,omitempty"`
}

func (x *KeepAliveResponse) Reset() {
	*x = KeepAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_KeepAlive_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveResponse) ProtoMessage() {}

func (x *KeepAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_KeepAlive_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveResponse.ProtoReflect.Descriptor instead.
func (*KeepAliveResponse) Descriptor() ([]byte, []int) {
	return file_KeepAlive_proto_rawDescGZIP(), []int{1}
}

func (x *KeepAliveResponse) GetAccessPointsConfig() *AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfig
	}
	return nil
}

func (x *KeepAliveResponse) GetServerMsec() int64 {
	if x != nil {
		return x.ServerMsec
	}
	return 0
}

func (x *KeepAliveResponse) GetAccessPointsConfigIpv6() *AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfigIpv6
	}
	return nil
}

func (x *KeepAliveResponse) GetAccessPointsConfigQUic() *AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfigQUic
	}
	return nil
}

func (x *KeepAliveResponse) GetAccessPointsConfigQuicIpv6() *AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfigQuicIpv6
	}
	return nil
}

func (x *KeepAliveResponse) GetFlowCostSampleRate() float32 {
	if x != nil {
		return x.FlowCostSampleRate
	}
	return 0
}

func (x *KeepAliveResponse) GetCommandSampleRate() float32 {
	if x != nil {
		return x.CommandSampleRate
	}
	return 0
}

func (x *KeepAliveResponse) GetAccessPointsConfigWs() *AccessPointsConfig {
	if x != nil {
		return x.AccessPointsConfigWs
	}
	return nil
}

var File_KeepAlive_proto protoreflect.FileDescriptor

var file_KeepAlive_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x1a, 0x0e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x50,
	0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb0, 0x03, 0x0a, 0x10, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x52, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x28, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x48, 0x0a, 0x10,
	0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x50, 0x0a, 0x14, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x14, 0x70, 0x75, 0x73, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x6b, 0x65, 0x65, 0x70,
	0x61, 0x6c, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x53, 0x65, 0x63, 0x12, 0x24, 0x0a, 0x0d,
	0x69, 0x70, 0x76, 0x36, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x70, 0x76, 0x36, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0xc5, 0x04, 0x0a, 0x11, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x12, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x12, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x56, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x70,
	0x76, 0x36, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e,
	0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x70, 0x76, 0x36,
	0x12, 0x56, 0x0a, 0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x51, 0x55, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x16, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x51, 0x55, 0x69, 0x63, 0x12, 0x5e, 0x0a, 0x1a, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x51, 0x75,
	0x69, 0x63, 0x49, 0x70, 0x76, 0x36, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41,
	0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x1a, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x51, 0x75, 0x69, 0x63, 0x49, 0x70, 0x76, 0x36, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x6c, 0x6f, 0x77,
	0x43, 0x6f, 0x73, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x66, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x73, 0x74, 0x53, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x52, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x57, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x14, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x57, 0x73, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x72, 0x7a, 0x6f, 0x67, 0x63, 0x2f,
	0x61, 0x63, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x2f, 0x61, 0x63, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_KeepAlive_proto_rawDescOnce sync.Once
	file_KeepAlive_proto_rawDescData = file_KeepAlive_proto_rawDesc
)

func file_KeepAlive_proto_rawDescGZIP() []byte {
	file_KeepAlive_proto_rawDescOnce.Do(func() {
		file_KeepAlive_proto_rawDescData = protoimpl.X.CompressGZIP(file_KeepAlive_proto_rawDescData)
	})
	return file_KeepAlive_proto_rawDescData
}

var file_KeepAlive_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_KeepAlive_proto_goTypes = []interface{}{
	(*KeepAliveRequest)(nil),            // 0: AcFunDanmu.KeepAliveRequest
	(*KeepAliveResponse)(nil),           // 1: AcFunDanmu.KeepAliveResponse
	(RegisterRequest_PresenceStatus)(0), // 2: AcFunDanmu.RegisterRequest.PresenceStatus
	(RegisterRequest_ActiveStatus)(0),   // 3: AcFunDanmu.RegisterRequest.ActiveStatus
	(*PushServiceToken)(nil),            // 4: AcFunDanmu.PushServiceToken
	(*AccessPointsConfig)(nil),          // 5: AcFunDanmu.AccessPointsConfig
}
var file_KeepAlive_proto_depIdxs = []int32{
	2, // 0: AcFunDanmu.KeepAliveRequest.presenceStatus:type_name -> AcFunDanmu.RegisterRequest.PresenceStatus
	3, // 1: AcFunDanmu.KeepAliveRequest.appActiveStatus:type_name -> AcFunDanmu.RegisterRequest.ActiveStatus
	4, // 2: AcFunDanmu.KeepAliveRequest.pushServiceToken:type_name -> AcFunDanmu.PushServiceToken
	4, // 3: AcFunDanmu.KeepAliveRequest.pushServiceTokenList:type_name -> AcFunDanmu.PushServiceToken
	5, // 4: AcFunDanmu.KeepAliveResponse.accessPointsConfig:type_name -> AcFunDanmu.AccessPointsConfig
	5, // 5: AcFunDanmu.KeepAliveResponse.accessPointsConfigIpv6:type_name -> AcFunDanmu.AccessPointsConfig
	5, // 6: AcFunDanmu.KeepAliveResponse.accessPointsConfigQUic:type_name -> AcFunDanmu.AccessPointsConfig
	5, // 7: AcFunDanmu.KeepAliveResponse.accessPointsConfigQuicIpv6:type_name -> AcFunDanmu.AccessPointsConfig
	5, // 8: AcFunDanmu.KeepAliveResponse.accessPointsConfigWs:type_name -> AcFunDanmu.AccessPointsConfig
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_KeepAlive_proto_init() }
func file_KeepAlive_proto_init() {
	if File_KeepAlive_proto != nil {
		return
	}
	file_Register_proto_init()
	file_PushServiceToken_proto_init()
	file_AccessPointsConfig_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_KeepAlive_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_KeepAlive_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_KeepAlive_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_KeepAlive_proto_goTypes,
		DependencyIndexes: file_KeepAlive_proto_depIdxs,
		MessageInfos:      file_KeepAlive_proto_msgTypes,
	}.Build()
	File_KeepAlive_proto = out.File
	file_KeepAlive_proto_rawDesc = nil
	file_KeepAlive_proto_goTypes = nil
	file_KeepAlive_proto_depIdxs = nil
}
