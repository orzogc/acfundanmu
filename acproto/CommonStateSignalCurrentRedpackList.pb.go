// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        v3.17.3
// source: CommonStateSignalCurrentRedpackList.proto

package acproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonStateSignalCurrentRedpackList_RedpackDisplayStatus int32

const (
	CommonStateSignalCurrentRedpackList_SHOW      CommonStateSignalCurrentRedpackList_RedpackDisplayStatus = 0
	CommonStateSignalCurrentRedpackList_GET_TOKEN CommonStateSignalCurrentRedpackList_RedpackDisplayStatus = 1
	CommonStateSignalCurrentRedpackList_GRAB      CommonStateSignalCurrentRedpackList_RedpackDisplayStatus = 2
)

// Enum value maps for CommonStateSignalCurrentRedpackList_RedpackDisplayStatus.
var (
	CommonStateSignalCurrentRedpackList_RedpackDisplayStatus_name = map[int32]string{
		0: "SHOW",
		1: "GET_TOKEN",
		2: "GRAB",
	}
	CommonStateSignalCurrentRedpackList_RedpackDisplayStatus_value = map[string]int32{
		"SHOW":      0,
		"GET_TOKEN": 1,
		"GRAB":      2,
	}
)

func (x CommonStateSignalCurrentRedpackList_RedpackDisplayStatus) Enum() *CommonStateSignalCurrentRedpackList_RedpackDisplayStatus {
	p := new(CommonStateSignalCurrentRedpackList_RedpackDisplayStatus)
	*p = x
	return p
}

func (x CommonStateSignalCurrentRedpackList_RedpackDisplayStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommonStateSignalCurrentRedpackList_RedpackDisplayStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_CommonStateSignalCurrentRedpackList_proto_enumTypes[0].Descriptor()
}

func (CommonStateSignalCurrentRedpackList_RedpackDisplayStatus) Type() protoreflect.EnumType {
	return &file_CommonStateSignalCurrentRedpackList_proto_enumTypes[0]
}

func (x CommonStateSignalCurrentRedpackList_RedpackDisplayStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommonStateSignalCurrentRedpackList_RedpackDisplayStatus.Descriptor instead.
func (CommonStateSignalCurrentRedpackList_RedpackDisplayStatus) EnumDescriptor() ([]byte, []int) {
	return file_CommonStateSignalCurrentRedpackList_proto_rawDescGZIP(), []int{0, 0}
}

type CommonStateSignalCurrentRedpackList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Redpacks []*CommonStateSignalCurrentRedpackList_Redpack `protobuf:"bytes,1,rep,name=redpacks,proto3" json:"redpacks,omitempty"` //redpack
}

func (x *CommonStateSignalCurrentRedpackList) Reset() {
	*x = CommonStateSignalCurrentRedpackList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CommonStateSignalCurrentRedpackList_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonStateSignalCurrentRedpackList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonStateSignalCurrentRedpackList) ProtoMessage() {}

func (x *CommonStateSignalCurrentRedpackList) ProtoReflect() protoreflect.Message {
	mi := &file_CommonStateSignalCurrentRedpackList_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonStateSignalCurrentRedpackList.ProtoReflect.Descriptor instead.
func (*CommonStateSignalCurrentRedpackList) Descriptor() ([]byte, []int) {
	return file_CommonStateSignalCurrentRedpackList_proto_rawDescGZIP(), []int{0}
}

func (x *CommonStateSignalCurrentRedpackList) GetRedpacks() []*CommonStateSignalCurrentRedpackList_Redpack {
	if x != nil {
		return x.Redpacks
	}
	return nil
}

type CommonStateSignalCurrentRedpackList_Redpack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender               *ZtLiveUserInfo                                          `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	DisplayStatus        CommonStateSignalCurrentRedpackList_RedpackDisplayStatus `protobuf:"varint,2,opt,name=displayStatus,proto3,enum=AcFunDanmu.CommonStateSignalCurrentRedpackList_RedpackDisplayStatus" json:"displayStatus,omitempty"`
	GrabBeginTimeMs      int64                                                    `protobuf:"varint,3,opt,name=grabBeginTimeMs,proto3" json:"grabBeginTimeMs,omitempty"`
	GetTokenLatestTimeMs int64                                                    `protobuf:"varint,4,opt,name=getTokenLatestTimeMs,proto3" json:"getTokenLatestTimeMs,omitempty"`
	RedPackId            string                                                   `protobuf:"bytes,5,opt,name=redPackId,proto3" json:"redPackId,omitempty"`
	RedpackBizUnit       string                                                   `protobuf:"bytes,6,opt,name=redpackBizUnit,proto3" json:"redpackBizUnit,omitempty"`
	RedpackAmount        int64                                                    `protobuf:"varint,7,opt,name=redpackAmount,proto3" json:"redpackAmount,omitempty"`
	SettleBeginTime      int64                                                    `protobuf:"varint,8,opt,name=settleBeginTime,proto3" json:"settleBeginTime,omitempty"`
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) Reset() {
	*x = CommonStateSignalCurrentRedpackList_Redpack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_CommonStateSignalCurrentRedpackList_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonStateSignalCurrentRedpackList_Redpack) ProtoMessage() {}

func (x *CommonStateSignalCurrentRedpackList_Redpack) ProtoReflect() protoreflect.Message {
	mi := &file_CommonStateSignalCurrentRedpackList_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonStateSignalCurrentRedpackList_Redpack.ProtoReflect.Descriptor instead.
func (*CommonStateSignalCurrentRedpackList_Redpack) Descriptor() ([]byte, []int) {
	return file_CommonStateSignalCurrentRedpackList_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetSender() *ZtLiveUserInfo {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetDisplayStatus() CommonStateSignalCurrentRedpackList_RedpackDisplayStatus {
	if x != nil {
		return x.DisplayStatus
	}
	return CommonStateSignalCurrentRedpackList_SHOW
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetGrabBeginTimeMs() int64 {
	if x != nil {
		return x.GrabBeginTimeMs
	}
	return 0
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetGetTokenLatestTimeMs() int64 {
	if x != nil {
		return x.GetTokenLatestTimeMs
	}
	return 0
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetRedPackId() string {
	if x != nil {
		return x.RedPackId
	}
	return ""
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetRedpackBizUnit() string {
	if x != nil {
		return x.RedpackBizUnit
	}
	return ""
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetRedpackAmount() int64 {
	if x != nil {
		return x.RedpackAmount
	}
	return 0
}

func (x *CommonStateSignalCurrentRedpackList_Redpack) GetSettleBeginTime() int64 {
	if x != nil {
		return x.SettleBeginTime
	}
	return 0
}

var File_CommonStateSignalCurrentRedpackList_proto protoreflect.FileDescriptor

var file_CommonStateSignalCurrentRedpackList_proto_rawDesc = []byte{
	0x0a, 0x29, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x41, 0x63, 0x46,
	0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x1a, 0x14, 0x5a, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x04,
	0x0a, 0x23, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44,
	0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x64,
	0x70, 0x61, 0x63, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b,
	0x52, 0x08, 0x72, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x73, 0x1a, 0x9d, 0x03, 0x0a, 0x07, 0x52,
	0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x2e, 0x5a, 0x74, 0x4c, 0x69, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x6a, 0x0a, 0x0d, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x44, 0x2e, 0x41, 0x63, 0x46, 0x75, 0x6e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x4c, 0x69,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x67, 0x72, 0x61, 0x62, 0x42, 0x65,
	0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x67, 0x72, 0x61, 0x62, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x67, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x4d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x42, 0x69, 0x7a,
	0x55, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x64, 0x70,
	0x61, 0x63, 0x6b, 0x42, 0x69, 0x7a, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65,
	0x64, 0x70, 0x61, 0x63, 0x6b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x72, 0x65, 0x64, 0x70, 0x61, 0x63, 0x6b, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x14, 0x52, 0x65,
	0x64, 0x70, 0x61, 0x63, 0x6b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x48, 0x4f, 0x57, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x47, 0x45, 0x54, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x47,
	0x52, 0x41, 0x42, 0x10, 0x02, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x72, 0x7a, 0x6f, 0x67, 0x63, 0x2f, 0x61, 0x63, 0x66, 0x75, 0x6e,
	0x64, 0x61, 0x6e, 0x6d, 0x75, 0x2f, 0x61, 0x63, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_CommonStateSignalCurrentRedpackList_proto_rawDescOnce sync.Once
	file_CommonStateSignalCurrentRedpackList_proto_rawDescData = file_CommonStateSignalCurrentRedpackList_proto_rawDesc
)

func file_CommonStateSignalCurrentRedpackList_proto_rawDescGZIP() []byte {
	file_CommonStateSignalCurrentRedpackList_proto_rawDescOnce.Do(func() {
		file_CommonStateSignalCurrentRedpackList_proto_rawDescData = protoimpl.X.CompressGZIP(file_CommonStateSignalCurrentRedpackList_proto_rawDescData)
	})
	return file_CommonStateSignalCurrentRedpackList_proto_rawDescData
}

var file_CommonStateSignalCurrentRedpackList_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_CommonStateSignalCurrentRedpackList_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_CommonStateSignalCurrentRedpackList_proto_goTypes = []interface{}{
	(CommonStateSignalCurrentRedpackList_RedpackDisplayStatus)(0), // 0: AcFunDanmu.CommonStateSignalCurrentRedpackList.RedpackDisplayStatus
	(*CommonStateSignalCurrentRedpackList)(nil),                   // 1: AcFunDanmu.CommonStateSignalCurrentRedpackList
	(*CommonStateSignalCurrentRedpackList_Redpack)(nil),           // 2: AcFunDanmu.CommonStateSignalCurrentRedpackList.Redpack
	(*ZtLiveUserInfo)(nil),                                        // 3: AcFunDanmu.ZtLiveUserInfo
}
var file_CommonStateSignalCurrentRedpackList_proto_depIdxs = []int32{
	2, // 0: AcFunDanmu.CommonStateSignalCurrentRedpackList.redpacks:type_name -> AcFunDanmu.CommonStateSignalCurrentRedpackList.Redpack
	3, // 1: AcFunDanmu.CommonStateSignalCurrentRedpackList.Redpack.sender:type_name -> AcFunDanmu.ZtLiveUserInfo
	0, // 2: AcFunDanmu.CommonStateSignalCurrentRedpackList.Redpack.displayStatus:type_name -> AcFunDanmu.CommonStateSignalCurrentRedpackList.RedpackDisplayStatus
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_CommonStateSignalCurrentRedpackList_proto_init() }
func file_CommonStateSignalCurrentRedpackList_proto_init() {
	if File_CommonStateSignalCurrentRedpackList_proto != nil {
		return
	}
	file_ZtLiveUserInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_CommonStateSignalCurrentRedpackList_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonStateSignalCurrentRedpackList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_CommonStateSignalCurrentRedpackList_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonStateSignalCurrentRedpackList_Redpack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_CommonStateSignalCurrentRedpackList_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_CommonStateSignalCurrentRedpackList_proto_goTypes,
		DependencyIndexes: file_CommonStateSignalCurrentRedpackList_proto_depIdxs,
		EnumInfos:         file_CommonStateSignalCurrentRedpackList_proto_enumTypes,
		MessageInfos:      file_CommonStateSignalCurrentRedpackList_proto_msgTypes,
	}.Build()
	File_CommonStateSignalCurrentRedpackList_proto = out.File
	file_CommonStateSignalCurrentRedpackList_proto_rawDesc = nil
	file_CommonStateSignalCurrentRedpackList_proto_goTypes = nil
	file_CommonStateSignalCurrentRedpackList_proto_depIdxs = nil
}
